(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{62:function(t,e,s){"use strict";s.r(e);var a=s(0),o=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"js中event-loop机制的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js中event-loop机制的理解","aria-hidden":"true"}},[t._v("#")]),t._v(" js中event loop机制的理解")]),s("p",[t._v("event loop 事件循环机制是js中一个相当重要的概念，event loop本质上执行一组任务队列 task queue ，而这一组task queue就认为是macrotask，event loop执行的顺序是：")]),s("p",[t._v("1.将第一个任务加到任务队列macrotask queue")]),s("p",[t._v("2.如果任务为空，直接执行microtask队列里")]),s("p",[t._v("3.如果任务不为空，执行这个macrotask")]),s("p",[t._v("4.如果这个macrotask中还有microtask queue的话，执行microtask")]),s("p",[t._v("5.将任务加到microtask中，执行")]),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),s("p",[t._v("macrotasks: setTimeout setInterval setImmediate I/O UI渲染")]),s("p",[t._v("microtasks: Promise process.nextTick Object.observe MutationObserver")])]),s("p",[t._v("-"),s("a",{attrs:{href:"https://github.com/ccforward/cc/issues/48",target:"_blank",rel:"noopener noreferrer"}},[t._v("具体机制参考")])])])}],!1,null,null,null);e.default=o.exports}}]);